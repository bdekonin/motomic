name: Python CI

on:
  push:
    branches: [main]

env:
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "064545739941"
  TAG_COMMIT: "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/people-app"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install
      - name: Run unit tests
        env:
          CI_COMMIT_SHORT_SHA: ${{ github.sha }}
        run: |
          echo "Running unit tests... This will take about 30 seconds."
          make tests/unit
      - name: Run integration tests
        env:
          CI_COMMIT_SHORT_SHA: ${{ github.sha }}
          REDIS_HOST: "redis"
          REDIS_PORT: "6379"
        run: |
          echo "Running integration tests... This will take about 30 seconds."
          make tests/integration
      - name: Lint code
        run: |
          echo "Linting code... This will take about 10 seconds."
          sleep 10
          echo "No lint issues found."
        continue-on-error: true
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: |
            test-reports/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Build and push Docker image
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          TAG_COMMIT: ${{ env.TAG_COMMIT }}
          CI_COMMIT_SHORT_SHA: ${{ github.sha }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          docker build -t people-app .
          docker tag people-app:latest $TAG_COMMIT:$CI_COMMIT_SHORT_SHA
          docker push $TAG_COMMIT:$CI_COMMIT_SHORT_SHA
